apiVersion: apps/v1
kind: Deployment
metadata:
  name: littleflow
  labels:
    app: littleflow
spec:
  selector:
    matchLabels:
      app: littleflow
  replicas: 1
  template:
    metadata:
      labels:
        app: littleflow
    spec:
      serviceAccountName: littleflow
      initContainers:
      - name: download
        image: python:3.10
        imagePullPolicy: IfNotPresent
        env:
        - name: BUCKET
          valueFrom:
            configMapKeyRef:
              name: config
              key: bucket
        - name: BUCKET_PATH
          valueFrom:
            configMapKeyRef:
              name: config
              key: path
        - name: ARCHIVE
          valueFrom:
            configMapKeyRef:
              name: config
              key: archive
        command: ["/bin/bash","-c"]
        args:
        - |-
          set -e;
          echo "Downloading s3://${BUCKET}/${BUCKET_PATH}/${ARCHIVE} to /app/${ARCHIVE}";
          pip install boto3;
          python -c "import boto3; s3 = boto3.client('s3'); s3.download_file('${BUCKET}','${BUCKET_PATH}${ARCHIVE}','/app/${ARCHIVE}')"
        volumeMounts:
        - name: app
          mountPath: /app
        - name: aws-config
          mountPath: /root/.aws
      containers:
      - name: worker
        image: python:3.10
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: password
        - name: REDIS_USERNAME
          valueFrom:
            secretKeyRef:
              name: redis
              key: username
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: config
              key: redis_port
        - name: ARCHIVE
          valueFrom:
            configMapKeyRef:
              name: config
              key: archive
        command: ["/usr/local/bin/python"]
        args: ["/app/$(ARCHIVE)", "receipts"]
        volumeMounts:
        - name: app
          mountPath: /app
      volumes:
      - name: app
        emptyDir: {}
      - name: aws-config
        secret:
          secretName: aws
          defaultMode: 0400
          items:
          - key: aws-credentials
            path: credentials
          - key: aws-config
            path: config
